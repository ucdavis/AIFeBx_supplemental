legend.key.width = unit(0.1, "in"),  # Adjust the width of the legend key
legend.spacing.y = unit(0.05, "in"),  # Adjust the vertical spacing between legend items
axis.text = element_text(size = 9, family = "Arial"),
axis.title = element_text(size = 9, family = "Arial"),  # Adjust axis title size
legend.title = element_text(size = 9, family = "Arial"),# Adjust legend title size
strip.text = element_text(size = 9, family = "Arial"))  # Allow facet labels to wrap into two rows
print(histogram_combined)
# Save the plot as a tif file
output_file_tif <- paste0(supplementaryFigures_dir,"S4_histogram_perROI.tif")
tiff(output_file_tif, width = 3.54, height = 8.26, units = "in", res = 300)
print(histogram_combined)
dev.off()
#Stack and bar plot for candidate lymphocytes
candidateLc <-  readRDS(paste0(outputDir_all,"candidateLc_Th2.rds")) %>%
st_drop_geometry()
#Generate summary frame for plot
candidateLc_byClass_and_nPath<- candidateLc %>%
group_by(classLabel, n_contributing_pathologists, classLabel_agree) %>%
summarise(n_annotations = n()) %>%
ungroup() %>%
group_by(classLabel) %>%
mutate(percent_annotations = (n_annotations / sum(n_annotations)) * 100) %>%
ungroup()
#Stackd bar plot
stack_bar_candidate <- ggplot(candidateLc_byClass_and_nPath, aes(x = classLabel, y = percent_annotations, fill = factor(classLabel_agree))) +
geom_bar(stat = "identity", width = 0.5) +
scale_fill_manual(values = class_contributors_palette) +
labs(
x = "",
y = "Candidate lymphocytes %",
fill = "Class and contributors") +
theme_bw() +
theme(
legend.position = "right",
legend.box = "horizontal",  # Display legend items vertically
legend.direction = "vertical",  # Adjust the direction of legend items
legend.key.height = unit(0.1, "in"),  # Adjust the height of the legend key
legend.key.width = unit(0.1, "in"),  # Adjust the width of the legend key
legend.spacing.y = unit(0.05, "in"),  # Adjust the vertical spacing between legend items
axis.text = element_text(size = 9, family = "Arial"),
axis.title = element_text(size = 9, family = "Arial"),
legend.title = element_text(size = 9, family = "Arial"),
axis.text.x = element_blank(),  # Remove x-axis labels
axis.ticks.x = element_blank()  # Remove x-axis ticks
) +
scale_x_discrete(labels = c("intraepithelial_lymphocytes" = "Intraepithelial", "lamina_propria_lymphocytes" = "Lamina propria"))
print(stack_bar_candidate)
# Save the plot as a tif file
output_file_tif <- paste0(mainFigures_dir,"F4_stack_candidateLc.tif")
tiff(output_file_tif, width = 7, height = 2.33, units = "in", res = 300)
print(stack_bar_candidate)
dev.off()
#Calculate percentage reference lymphocytes from candidate lymphocytes
#Percentage majority annotations of all
percentage_reference_of_candidate <- candidateLc_byClass_and_nPath %>%
group_by(classLabel) %>%
summarize(
n_total = sum(n_annotations),
n_majority = sum(n_annotations[n_contributing_pathologists >= 6]),
n_minority = sum(n_annotations[n_contributing_pathologists < 6]),
percent_annotations_minority = sum(n_annotations[n_contributing_pathologists < 6]) / sum(n_annotations) * 100,
percent_annotations_majority = sum(n_annotations[n_contributing_pathologists >= 6]) / sum(n_annotations) * 100
)
View(percentage_reference_of_candidate)
View(lymphocytes_bySource)
# Filter data for intraepithelial and lamina propria lymphocytes
intraepithelial_data <- subset(candidateLc_byClass_and_nPath, classLabel == "intraepithelial_lymphocytes")
lamina_propria_data <- subset(candidateLc_byClass_and_nPath, classLabel == "lamina_propria_lymphocytes")
# Plot for intraepithelial lymphocytes
stack_bar_intraepithelial <- ggplot(intraepithelial_data, aes(x = classLabel_agree, y = percent_annotations, fill = factor(classLabel_agree))) +
geom_bar(stat = "identity", width = 0.5) +
scale_fill_manual(values = class_contributors_palette) +
labs(
x = "",
y = "Candidate lymphocytes %",
fill = "Contributors (n), intraepithelial"
) +
theme_bw() +
theme(
legend.position = "right",
legend.box = "horizontal",
legend.direction = "vertical",
legend.key.height = unit(0.1, "in"),
legend.key.width = unit(0.1, "in"),
legend.spacing.y = unit(0.05, "in"),
axis.text = element_text(size = 9, family = "Arial"),
axis.title = element_text(size = 9, family = "Arial"),
legend.title = element_text(size = 9, family = "Arial"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
) +
scale_x_discrete(labels = c("intraepithelial_lymphocytes" = "Intraepithelial"))
# Plot for lamina propria lymphocytes
stack_bar_lamina_propria <- ggplot(lamina_propria_data, aes(x = classLabel_agree, y = percent_annotations, fill = factor(classLabel_agree))) +
geom_bar(stat = "identity", width = 0.5) +
scale_fill_manual(values = class_contributors_palette) +
labs(
x = "",
y = "Candidate lymphocytes %",
fill = "Contributors (n), lamina propria"
) +
theme_bw() +
theme(
legend.position = "right",
legend.box = "horizontal",
legend.direction = "vertical",
legend.key.height = unit(0.1, "in"),
legend.key.width = unit(0.1, "in"),
legend.spacing.y = unit(0.05, "in"),
axis.text = element_text(size = 9, family = "Arial"),
axis.title = element_text(size = 9, family = "Arial"),
legend.title = element_text(size = 9, family = "Arial"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
) +
scale_x_discrete(labels = c("lamina_propria_lymphocytes" = "Lamina propria"))
# Print both plots side by side
library(gridExtra)
grid.arrange(stack_bar_intraepithelial, stack_bar_lamina_propria, ncol=2)
#Based on evaluation of the graphs, the distance threshold 2 um is selected for candidate lymphocytes
candidateLc_allTh_combined.rds <- readRDS(paste0(outputDir_all, "candidateLc_allTh_combined.rds"))
candidateLc_Th2 <- candidateLc_allTh_combined.rds %>%
filter(distance_threshold == "2") %>%
select(slideName, classLabel, referenceId, n_contributing_pathologists, percent_pathologists_contributing, pathologists, component_annotations, classLabel_agree, geometry)
saveRDS(candidateLc_Th2, paste0(outputDir_all,"candidateLc_Th2.rds"))
#Generate frame with all reference lymphocytes (candidate lymphocytes with more then 6 contributing pathologists)
referenceLc_Th2<- candidateLc_Th2 %>%
filter(n_contributing_pathologists >=6)
saveRDS(referenceLc_Th2, paste0(outputDir_all, "referenceLc_Th2.rds"))
#Stack and bar plot for candidate lymphocytes (Figure 4)
candidateLc <-  readRDS(paste0(outputDir_all,"candidateLc_Th2.rds")) %>%
st_drop_geometry()
#Generate summary frame for plot
candidateLc_byClass_and_nPath<- candidateLc %>%
group_by(classLabel, n_contributing_pathologists, classLabel_agree) %>%
summarise(n_annotations = n()) %>%
ungroup() %>%
group_by(classLabel) %>%
mutate(percent_annotations = (n_annotations / sum(n_annotations)) * 100) %>%
ungroup()
#Stackd bar plot
stack_bar_candidate <- ggplot(candidateLc_byClass_and_nPath, aes(x = classLabel, y = percent_annotations, fill = factor(classLabel_agree))) +
geom_bar(stat = "identity", width = 0.5) +
scale_fill_manual(values = class_contributors_palette) +
labs(
x = "",
y = "Candidate lymphocytes %",
fill = "Class and contributors") +
theme_bw() +
theme(
legend.position = "right",
legend.box = "horizontal",  # Display legend items vertically
legend.direction = "vertical",  # Adjust the direction of legend items
legend.key.height = unit(0.1, "in"),  # Adjust the height of the legend key
legend.key.width = unit(0.1, "in"),  # Adjust the width of the legend key
legend.spacing.y = unit(0.05, "in"),  # Adjust the vertical spacing between legend items
axis.text = element_text(size = 9, family = "Arial"),
axis.title = element_text(size = 9, family = "Arial"),
legend.title = element_text(size = 9, family = "Arial")
) +
scale_x_discrete(labels = c("intraepithelial_lymphocytes" = "Intraepithelial", "lamina_propria_lymphocytes" = "Lamina propria"))
print(stack_bar_candidate)
# Save the plot as a tif file
output_file_tif <- paste0(mainFigures_dir,"Figure_4_stack_candidateLc.tif")
tiff(output_file_tif, width = 7, height = 2.33, units = "in", res = 300)
print(stack_bar_candidate)
dev.off()
#Based on evaluation of the graphs, the distance threshold 2 um is selected for candidate lymphocytes
candidateLc_allTh_combined.rds <- readRDS(paste0(outputDir_all, "candidateLc_allTh_combined.rds"))
candidateLc_Th2 <- candidateLc_allTh_combined.rds %>%
filter(distance_threshold == "2") %>%
select(slideName, classLabel, referenceId, n_contributing_pathologists, percent_pathologists_contributing, pathologists, component_annotations, classLabel_agree, geometry)
saveRDS(candidateLc_Th2, paste0(outputDir_all,"candidateLc_Th2.rds"))
#Generate frame with all reference lymphocytes (candidate lymphocytes with more then 6 contributing pathologists)
referenceLc_Th2<- candidateLc_Th2 %>%
filter(n_contributing_pathologists >=6)
saveRDS(referenceLc_Th2, paste0(outputDir_all, "referenceLc_Th2.rds"))
#Stack and bar plot for candidate lymphocytes (Figure 4)
candidateLc <-  readRDS(paste0(outputDir_all,"candidateLc_Th2.rds")) %>%
st_drop_geometry()
#Generate summary frame for plot
candidateLc_byClass_and_nPath<- candidateLc %>%
group_by(classLabel, n_contributing_pathologists, classLabel_agree) %>%
summarise(n_annotations = n()) %>%
ungroup() %>%
group_by(classLabel) %>%
mutate(percent_annotations = (n_annotations / sum(n_annotations)) * 100) %>%
ungroup()
#Stackd bar plot
# Extracting only the integers from classLabel_agree
candidateLc_byClass_and_nPath$short_label <- gsub("[^0-9]", "", candidateLc_byClass_and_nPath$classLabel_agree)
stack_bar_candidate <- ggplot(candidateLc_byClass_and_nPath, aes(x = classLabel, y = percent_annotations, fill = factor(short_label))) +
geom_bar(stat = "identity", width = 0.5) +
scale_fill_manual(values = class_contributors_palette) +
labs(
x = "",
y = "Candidate lymphocytes %",
fill = "Class and contributors") +
theme_bw() +
theme(
legend.position = "right",
legend.box = "horizontal",  # Display legend items vertically
legend.direction = "vertical",  # Adjust the direction of legend items
legend.key.height = unit(0.1, "in"),  # Adjust the height of the legend key
legend.key.width = unit(0.1, "in"),  # Adjust the width of the legend key
legend.spacing.y = unit(0.05, "in"),  # Adjust the vertical spacing between legend items
axis.text = element_text(size = 9, family = "Arial"),
axis.title = element_text(size = 9, family = "Arial"),
legend.title = element_text(size = 9, family = "Arial")
) +
scale_x_discrete(labels = c("intraepithelial_lymphocytes" = "Intraepithelial", "lamina_propria_lymphocytes" = "Lamina propria"))
print(stack_bar_candidate)
# Save the plot as a tif file
output_file_tif <- paste0(mainFigures_dir,"Figure_4_stack_candidateLc.tif")
tiff(output_file_tif, width = 7, height = 2.33, units = "in", res = 300)
print(stack_bar_candidate)
dev.off()
View(candidateLc_byClass_and_nPath)
#Based on evaluation of the graphs, the distance threshold 2 um is selected for candidate lymphocytes
candidateLc_allTh_combined.rds <- readRDS(paste0(outputDir_all, "candidateLc_allTh_combined.rds"))
candidateLc_Th2 <- candidateLc_allTh_combined.rds %>%
filter(distance_threshold == "2") %>%
select(slideName, classLabel, referenceId, n_contributing_pathologists, percent_pathologists_contributing, pathologists, component_annotations, classLabel_agree, geometry)
saveRDS(candidateLc_Th2, paste0(outputDir_all,"candidateLc_Th2.rds"))
#Generate frame with all reference lymphocytes (candidate lymphocytes with more then 6 contributing pathologists)
referenceLc_Th2<- candidateLc_Th2 %>%
filter(n_contributing_pathologists >=6)
saveRDS(referenceLc_Th2, paste0(outputDir_all, "referenceLc_Th2.rds"))
#Stack and bar plot for candidate lymphocytes (Figure 4)
candidateLc <-  readRDS(paste0(outputDir_all,"candidateLc_Th2.rds")) %>%
st_drop_geometry()
#Generate summary frame for plot
candidateLc_byClass_and_nPath<- candidateLc %>%
group_by(classLabel, n_contributing_pathologists, classLabel_agree) %>%
summarise(n_annotations = n()) %>%
ungroup() %>%
group_by(classLabel) %>%
mutate(percent_annotations = (n_annotations / sum(n_annotations)) * 100) %>%
ungroup()
#Stackd bar plot
stack_bar_candidate <- ggplot(candidateLc_byClass_and_nPath, aes(x = classLabel, y = percent_annotations, fill = factor(classLabel_agree))) +
geom_bar(stat = "identity", width = 0.5) +
scale_fill_manual(values = class_contributors_palette) +
labs(
x = "",
y = "Candidate lymphocytes %",
fill = "Class and contributors") +
theme_bw() +
theme(
legend.position = "right",
legend.box = "horizontal",  # Display legend items vertically
legend.direction = "vertical",  # Adjust the direction of legend items
legend.key.height = unit(0.1, "in"),  # Adjust the height of the legend key
legend.key.width = unit(0.1, "in"),  # Adjust the width of the legend key
legend.spacing.y = unit(0.05, "in"),  # Adjust the vertical spacing between legend items
axis.text = element_text(size = 9, family = "Arial"),
axis.title = element_text(size = 9, family = "Arial"),
legend.title = element_text(size = 9, family = "Arial")
) +
scale_x_discrete(labels = c("intraepithelial_lymphocytes" = "Intraepithelial", "lamina_propria_lymphocytes" = "Lamina propria"))
print(stack_bar_candidate)
# Save the plot as a tif file
output_file_tif <- paste0(mainFigures_dir,"Figure_4_stack_candidateLc.tif")
tiff(output_file_tif, width = 7, height = 2.33, units = "in", res = 300)
print(stack_bar_candidate)
dev.off()
#Based on evaluation of the graphs, the distance threshold 2 um is selected for candidate lymphocytes
candidateLc_allTh_combined.rds <- readRDS(paste0(outputDir_all, "candidateLc_allTh_combined.rds"))
candidateLc_Th2 <- candidateLc_allTh_combined.rds %>%
filter(distance_threshold == "2") %>%
select(slideName, classLabel, referenceId, n_contributing_pathologists, percent_pathologists_contributing, pathologists, component_annotations, classLabel_agree, geometry)
saveRDS(candidateLc_Th2, paste0(outputDir_all,"candidateLc_Th2.rds"))
#Generate frame with all reference lymphocytes (candidate lymphocytes with more then 6 contributing pathologists)
referenceLc_Th2<- candidateLc_Th2 %>%
filter(n_contributing_pathologists >=6)
saveRDS(referenceLc_Th2, paste0(outputDir_all, "referenceLc_Th2.rds"))
#Stack and bar plot for candidate lymphocytes (Figure 4)
candidateLc <-  readRDS(paste0(outputDir_all,"candidateLc_Th2.rds")) %>%
st_drop_geometry()
#Generate summary frame for plot
candidateLc_byClass_and_nPath<- candidateLc %>%
group_by(classLabel, n_contributing_pathologists, classLabel_agree) %>%
summarise(n_annotations = n()) %>%
ungroup() %>%
group_by(classLabel) %>%
mutate(percent_annotations = (n_annotations / sum(n_annotations)) * 100) %>%
ungroup()
#Stackd bar plot
stack_bar_candidate <- ggplot(candidateLc_byClass_and_nPath, aes(x = classLabel, y = percent_annotations, fill = factor(classLabel_agree))) +
geom_bar(stat = "identity", width = 0.5) +
scale_fill_manual(values = class_contributors_palette) +
labs(
x = "",
y = "Candidate lymphocytes %",
fill = "Class and contributors") +
theme_bw() +
theme(
legend.position = "right",
legend.box = "horizontal",  # Display legend items vertically
legend.direction = "vertical",  # Adjust the direction of legend items
legend.key.height = unit(0.1, "in"),  # Adjust the height of the legend key
legend.key.width = unit(0.1, "in"),  # Adjust the width of the legend key
legend.spacing.y = unit(0.05, "in"),  # Adjust the vertical spacing between legend items
axis.text = element_text(size = 9, family = "Arial"),
axis.title = element_text(size = 9, family = "Arial"),
legend.title = element_text(size = 9, family = "Arial")
) +
scale_x_discrete(labels = c("intraepithelial_lymphocytes" = "Intraepithelial", "lamina_propria_lymphocytes" = "Lamina propria"))
print(stack_bar_candidate)
# Save the plot as a tif file
output_file_tif <- paste0(mainFigures_dir,"Figure_4_stack_candidateLc.tif")
tiff(output_file_tif, width = 7, height = 2.33, units = "in", res = 300)
print(stack_bar_candidate)
dev.off()
#Calculate percentage reference lymphocytes from candidate lymphocytes
#Percentage majority annotations of all
reference_of_candidate_table <- candidateLc_byClass_and_nPath %>%
group_by(classLabel) %>%
summarize(
n_total = sum(n_annotations),
n_majority = sum(n_annotations[n_contributing_pathologists >= 6]),
n_minority = sum(n_annotations[n_contributing_pathologists < 6]),
percent_annotations_minority = sum(n_annotations[n_contributing_pathologists < 6]) / sum(n_annotations) * 100,
percent_annotations_majority = sum(n_annotations[n_contributing_pathologists >= 6]) / sum(n_annotations) * 100
)
saveRDS(reference_of_candidate_table, paste0(outputDir_all, "reference_of_candidate_table.rds"))
View(reference_of_candidate_table)
View(lymphocytes_bySource)
View(all_combinations)
View(annotation_candidate_reference_prediction_summaries)
View(annotations)
View(lymphocytes_bySource)
#Based on evaluation of the graphs, the distance threshold 2 um is selected for candidate lymphocytes
candidateLc_allTh_combined.rds <- readRDS(paste0(outputDir_all, "candidateLc_allTh_combined.rds"))
candidateLc_Th2 <- candidateLc_allTh_combined.rds %>%
filter(distance_threshold == "2") %>%
select(slideName, classLabel, referenceId, n_contributing_pathologists, percent_pathologists_contributing, pathologists, component_annotations, classLabel_agree, geometry)
saveRDS(candidateLc_Th2, paste0(outputDir_all,"candidateLc_Th2.rds"))
#Generate frame with all reference lymphocytes (candidate lymphocytes with more then 6 contributing pathologists)
referenceLc_Th2<- candidateLc_Th2 %>%
filter(n_contributing_pathologists >=6)
saveRDS(referenceLc_Th2, paste0(outputDir_all, "referenceLc_Th2.rds"))
#Stack and bar plot for candidate lymphocytes (Figure 4)
candidateLc <-  readRDS(paste0(outputDir_all,"candidateLc_Th2.rds")) %>%
st_drop_geometry()
#Generate summary frame for plot
candidateLc_byClass_and_nPath<- candidateLc %>%
group_by(classLabel, n_contributing_pathologists, classLabel_agree) %>%
summarise(n_annotations = n()) %>%
ungroup() %>%
group_by(classLabel) %>%
mutate(percent_annotations = (n_annotations / sum(n_annotations)) * 100) %>%
ungroup()
#Stackd bar plot
stack_bar_candidate <- ggplot(candidateLc_byClass_and_nPath, aes(x = classLabel, y = percent_annotations, fill = factor(classLabel_agree))) +
geom_bar(stat = "identity", width = 0.5) +
scale_fill_manual(values = class_contributors_palette, name = "Contributors (n)", labels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11")) +
labs(
x = "",
y = "Candidate lymphocytes %",
fill = "Class and contributors") +
theme_bw() +
theme(
legend.position = "right",
legend.box = "horizontal",  # Display legend items vertically
legend.direction = "vertical",  # Adjust the direction of legend items
legend.key.height = unit(0.1, "in"),  # Adjust the height of the legend key
legend.key.width = unit(0.1, "in"),  # Adjust the width of the legend key
legend.spacing.y = unit(0.05, "in"),  # Adjust the vertical spacing between legend items
axis.text = element_text(size = 9, family = "Arial"),
axis.title = element_text(size = 9, family = "Arial"),
legend.title = element_text(size = 9, family = "Arial")
) +
scale_x_discrete(labels = c("intraepithelial_lymphocytes" = "Intraepithelial", "lamina_propria_lymphocytes" = "Lamina propria"))
print(stack_bar_candidate)
# Save the plot as a tif file
output_file_tif <- paste0(mainFigures_dir,"Figure_4_stack_candidateLc.tif")
tiff(output_file_tif, width = 7, height = 2.33, units = "in", res = 300)
print(stack_bar_candidate)
dev.off()
#Calculate percentage reference lymphocytes from candidate lymphocytes
#Percentage majority annotations of all
reference_of_candidate_table <- candidateLc_byClass_and_nPath %>%
group_by(classLabel) %>%
summarize(
n_total = sum(n_annotations),
n_majority = sum(n_annotations[n_contributing_pathologists >= 6]),
n_minority = sum(n_annotations[n_contributing_pathologists < 6]),
percent_annotations_minority = sum(n_annotations[n_contributing_pathologists < 6]) / sum(n_annotations) * 100,
percent_annotations_majority = sum(n_annotations[n_contributing_pathologists >= 6]) / sum(n_annotations) * 100
)
saveRDS(reference_of_candidate_table, paste0(outputDir_all, "reference_of_candidate_table.rds"))
#Based on evaluation of the graphs, the distance threshold 2 um is selected for candidate lymphocytes
candidateLc_allTh_combined.rds <- readRDS(paste0(outputDir_all, "candidateLc_allTh_combined.rds"))
candidateLc_Th2 <- candidateLc_allTh_combined.rds %>%
filter(distance_threshold == "2") %>%
select(slideName, classLabel, referenceId, n_contributing_pathologists, percent_pathologists_contributing, pathologists, component_annotations, classLabel_agree, geometry)
saveRDS(candidateLc_Th2, paste0(outputDir_all,"candidateLc_Th2.rds"))
#Generate frame with all reference lymphocytes (candidate lymphocytes with more then 6 contributing pathologists)
referenceLc_Th2<- candidateLc_Th2 %>%
filter(n_contributing_pathologists >=6)
saveRDS(referenceLc_Th2, paste0(outputDir_all, "referenceLc_Th2.rds"))
#Stack and bar plot for candidate lymphocytes (Figure 4)
candidateLc <-  readRDS(paste0(outputDir_all,"candidateLc_Th2.rds")) %>%
st_drop_geometry()
#Generate summary frame for plot
candidateLc_byClass_and_nPath<- candidateLc %>%
group_by(classLabel, n_contributing_pathologists, classLabel_agree) %>%
summarise(n_annotations = n()) %>%
ungroup() %>%
group_by(classLabel) %>%
mutate(percent_annotations = (n_annotations / sum(n_annotations)) * 100) %>%
ungroup()
#Stackd bar plot
stack_bar_candidate <- ggplot(candidateLc_byClass_and_nPath, aes(x = classLabel, y = percent_annotations, fill = factor(classLabel_agree))) +
geom_bar(stat = "identity", width = 0.5) +
scale_fill_manual(values = class_contributors_palette, name = "Contributors (n)", labels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11")) +
labs(
x = "",
y = "Reference",
fill = "Class and contributors") +
theme_bw() +
theme(
legend.position = "right",
legend.box = "horizontal",  # Display legend items vertically
legend.direction = "vertical",  # Adjust the direction of legend items
legend.key.height = unit(0.1, "in"),  # Adjust the height of the legend key
legend.key.width = unit(0.1, "in"),  # Adjust the width of the legend key
legend.spacing.y = unit(0.05, "in"),  # Adjust the vertical spacing between legend items
axis.text = element_text(size = 9, family = "Arial"),
axis.title = element_text(size = 9, family = "Arial"),
legend.title = element_text(size = 9, family = "Arial")
) +
scale_x_discrete(labels = c("intraepithelial_lymphocytes" = "Intraepithelial", "lamina_propria_lymphocytes" = "Lamina propria"))
print(stack_bar_candidate)
# Save the plot as a tif file
output_file_tif <- paste0(mainFigures_dir,"Figure_4_stack_candidateLc.tif")
tiff(output_file_tif, width = 7, height = 2.33, units = "in", res = 300)
print(stack_bar_candidate)
dev.off()
#Calculate percentage reference lymphocytes from candidate lymphocytes
#Percentage majority annotations of all
reference_of_candidate_table <- candidateLc_byClass_and_nPath %>%
group_by(classLabel) %>%
summarize(
n_total = sum(n_annotations),
n_majority = sum(n_annotations[n_contributing_pathologists >= 6]),
n_minority = sum(n_annotations[n_contributing_pathologists < 6]),
percent_annotations_minority = sum(n_annotations[n_contributing_pathologists < 6]) / sum(n_annotations) * 100,
percent_annotations_majority = sum(n_annotations[n_contributing_pathologists >= 6]) / sum(n_annotations) * 100
)
saveRDS(reference_of_candidate_table, paste0(outputDir_all, "reference_of_candidate_table.rds"))
#Based on evaluation of the graphs, the distance threshold 2 um is selected for candidate lymphocytes
candidateLc_allTh_combined.rds <- readRDS(paste0(outputDir_all, "candidateLc_allTh_combined.rds"))
candidateLc_Th2 <- candidateLc_allTh_combined.rds %>%
filter(distance_threshold == "2") %>%
select(slideName, classLabel, referenceId, n_contributing_pathologists, percent_pathologists_contributing, pathologists, component_annotations, classLabel_agree, geometry)
saveRDS(candidateLc_Th2, paste0(outputDir_all,"candidateLc_Th2.rds"))
#Generate frame with all reference lymphocytes (candidate lymphocytes with more then 6 contributing pathologists)
referenceLc_Th2<- candidateLc_Th2 %>%
filter(n_contributing_pathologists >=6)
saveRDS(referenceLc_Th2, paste0(outputDir_all, "referenceLc_Th2.rds"))
#Stack and bar plot for candidate lymphocytes (Figure 4)
candidateLc <-  readRDS(paste0(outputDir_all,"candidateLc_Th2.rds")) %>%
st_drop_geometry()
#Generate summary frame for plot
candidateLc_byClass_and_nPath<- candidateLc %>%
group_by(classLabel, n_contributing_pathologists, classLabel_agree) %>%
summarise(n_annotations = n()) %>%
ungroup() %>%
group_by(classLabel) %>%
mutate(percent_annotations = (n_annotations / sum(n_annotations)) * 100) %>%
ungroup()
#Stackd bar plot
stack_bar_candidate <- ggplot(candidateLc_byClass_and_nPath, aes(x = classLabel, y = percent_annotations, fill = factor(classLabel_agree))) +
geom_bar(stat = "identity", width = 0.5) +
scale_fill_manual(values = class_contributors_palette, name = "Contributors (n)", labels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11")) +
labs(
x = "",
y = "Candidate lymphocytes %",
fill = "Class and contributors") +
theme_bw() +
theme(
legend.position = "right",
legend.box = "horizontal",  # Display legend items vertically
legend.direction = "vertical",  # Adjust the direction of legend items
legend.key.height = unit(0.1, "in"),  # Adjust the height of the legend key
legend.key.width = unit(0.1, "in"),  # Adjust the width of the legend key
legend.spacing.y = unit(0.05, "in"),  # Adjust the vertical spacing between legend items
axis.text = element_text(size = 9, family = "Arial"),
axis.title = element_text(size = 9, family = "Arial"),
legend.title = element_text(size = 9, family = "Arial")
) +
scale_x_discrete(labels = c("intraepithelial_lymphocytes" = "Intraepithelial", "lamina_propria_lymphocytes" = "Lamina propria"))
print(stack_bar_candidate)
# Save the plot as a tif file
output_file_tif <- paste0(mainFigures_dir,"Figure_4_stack_candidateLc.tif")
tiff(output_file_tif, width = 7, height = 2.33, units = "in", res = 300)
print(stack_bar_candidate)
dev.off()
#Calculate percentage reference lymphocytes from candidate lymphocytes
#Percentage majority annotations of all
reference_of_candidate_table <- candidateLc_byClass_and_nPath %>%
group_by(classLabel) %>%
summarize(
n_total = sum(n_annotations),
n_majority = sum(n_annotations[n_contributing_pathologists >= 6]),
n_minority = sum(n_annotations[n_contributing_pathologists < 6]),
percent_annotations_minority = sum(n_annotations[n_contributing_pathologists < 6]) / sum(n_annotations) * 100,
percent_annotations_majority = sum(n_annotations[n_contributing_pathologists >= 6]) / sum(n_annotations) * 100
)
saveRDS(reference_of_candidate_table, paste0(outputDir_all, "reference_of_candidate_table.rds"))
